//블록레벨스코프
//let과 const는 블록레벨 스코프를 가지고있어요. 기억해주세요
{
    let x = 10
    const y= 20
}
console.log(x,y) // 안됩니다.

//지역변수와 전역변수
let x=100 // 블록{} 밖에 선언하면 전역에서 접근할수있는 변수가 됩니다. 이를 전역변수라고 합니다.
function 함수(){
    let y=20 //블록 안에 변수를 선언하시면 밖에서 접근할 수 없습니다. 이를 지역변수라고 합니다.
    console.log(x) //스코프 체이닝(스코프 체인을 따라 해당영역에 변수가 없으면 계속해서 상위 스코프를 따라 올라갑니다.윈도우까지. 전역까지 올라갔는데 변수가 없다면 에러가납니다), 즉,x가 블록안에 없으므로 위에가서 확인합니다.      스코프//블록{}단위라고 일단 생각하자.
}
함수()//100 뜹니다.



////////////////스코프 체이닝도 사실 실무에선 많이중요하지않아요.
//집착하지마세용 . 실무에선 딱히..
let x=10
function 함수1()//코드는 호준님꺼보세요 안쓸거임
//가장가까운x를 만낫을때 출력합니다. 뭐가출력되는지는 알아야합니다.
//함수2()이런식으로 호출이되야 실행을시킵니다.


// 함수의 호이스팅(함수와 변수를 끌어올려 주는 것)
함수(10)

function 함수(x){
    return x+100
}
//실행이 됩니다 //110


//에러 
함수(10)
let 함수 = x => x+100 //에러
console.log(x)
let x= 100 //이런거여서 에러가뜹니다.


//에러2
함수(10)

const 함수 = function (x) {
    return x + 100
}


//3 다시 보기... 이해가살짝안간다


//body script 부분에 a.js가 먼저 나와서안된거 . 독립된건아니다. 
//스크립트를 여러개 body script에 넣을때 다 공유되는거.
//호이스팅test.html 를 참고하세요




